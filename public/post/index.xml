<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 16 Dec 2020 00:30:25 +0800</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gradle 采坑记</title>
      <link>/post/gradle-%E9%87%87%E5%9D%91%E8%AE%B0/</link>
      <pubDate>Wed, 16 Dec 2020 00:30:25 +0800</pubDate>
      
      <guid>/post/gradle-%E9%87%87%E5%9D%91%E8%AE%B0/</guid>
      <description>最近开始尝试使用 Gradle 构建项目，踩了一些坑，简略记录以备忘。
Gradle 项目可以使用 Gradle Wrapper (简称 Wrapper)，也可以不使用。Wrapper 的主要目的是将项目构建依赖的 Gradle 版本配置化，作为构建脚本的一部分。Wrapper 只是一个脚本，它调用指定版本的 Gradle；如果指定版本的 Gradle 不存在，就下载并自动安装，避免开发者手动安装。官方推荐使用 Wrapper 执行任何 Gradle build。可是墙内下载 Gradle 非常慢，一开始还不知道为啥必须下载，如何加速，这让人很懊恼。如何使用 Wrapper，请看 The Gradle Wrapper。
解决办法有两个，但都需要先手工把对应版本下载到本地。
办法一
  部署 HTTP Server (如 Nginx)，把下载的文件放入站点目录。
  修改 {Gradle Project}/gradle/wrapper/gradle-wrapper.properties 文件，将 distributionUrl 设置为本地或内网的可用下载地址。
1 2 3 4 5 6  distributionBase=GRADLE_USER_HOME distributionPath=wrapper/dists #distributionUrl=https\://services.gradle.org/distributions/gradle-6.6.1-bin.zip distributionUrl=http\://localhost:8080/gradle-6.6.1-bin.zip zipStoreBase=GRADLE_USER_HOME zipStorePath=wrapper/dists   注意，对于 properties 文件，name/value 的分隔符是 &amp;lsquo;=&amp;rsquo; 或 &amp;lsquo;:&#39;，所以如果 value 中包含这两个字符，记得用 \ 进行转义。
  办法二</description>
    </item>
    
  </channel>
</rss>
